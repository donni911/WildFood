(function(){if(typeof window!="object")return;if("IntersectionObserver"in window&&"IntersectionObserverEntry"in window&&"intersectionRatio"in window.IntersectionObserverEntry.prototype){"isIntersecting"in window.IntersectionObserverEntry.prototype||Object.defineProperty(window.IntersectionObserverEntry.prototype,"isIntersecting",{get:function(){return this.intersectionRatio>0}});return}function l(t){try{return t.defaultView&&t.defaultView.frameElement||null}catch{return null}}var g=function(t){for(var e=t,r=l(e);r;)e=r.ownerDocument,r=l(e);return e}(window.document),m=[],h=null,c=null;function d(t){this.time=t.time,this.target=t.target,this.rootBounds=R(t.rootBounds),this.boundingClientRect=R(t.boundingClientRect),this.intersectionRect=R(t.intersectionRect||v()),this.isIntersecting=!!t.intersectionRect;var e=this.boundingClientRect,r=e.width*e.height,n=this.intersectionRect,o=n.width*n.height;r?this.intersectionRatio=Number((o/r).toFixed(4)):this.intersectionRatio=this.isIntersecting?1:0}function i(t,e){var r=e||{};if(typeof t!="function")throw new Error("callback must be a function");if(r.root&&r.root.nodeType!=1&&r.root.nodeType!=9)throw new Error("root must be a Document or Element");this._checkForIntersections=b(this._checkForIntersections.bind(this),this.THROTTLE_TIMEOUT),this._callback=t,this._observationTargets=[],this._queuedEntries=[],this._rootMarginValues=this._parseRootMargin(r.rootMargin),this.thresholds=this._initThresholds(r.threshold),this.root=r.root||null,this.rootMargin=this._rootMarginValues.map(function(n){return n.value+n.unit}).join(" "),this._monitoringDocuments=[],this._monitoringUnsubscribes=[]}i.prototype.THROTTLE_TIMEOUT=100,i.prototype.POLL_INTERVAL=null,i.prototype.USE_MUTATION_OBSERVER=!0,i._setupCrossOriginUpdater=function(){return h||(h=function(t,e){!t||!e?c=v():c=O(t,e),m.forEach(function(r){r._checkForIntersections()})}),h},i._resetCrossOriginUpdater=function(){h=null,c=null},i.prototype.observe=function(t){var e=this._observationTargets.some(function(r){return r.element==t});if(!e){if(!(t&&t.nodeType==1))throw new Error("target must be an Element");this._registerInstance(),this._observationTargets.push({element:t,entry:null}),this._monitorIntersections(t.ownerDocument),this._checkForIntersections()}},i.prototype.unobserve=function(t){this._observationTargets=this._observationTargets.filter(function(e){return e.element!=t}),this._unmonitorIntersections(t.ownerDocument),this._observationTargets.length==0&&this._unregisterInstance()},i.prototype.disconnect=function(){this._observationTargets=[],this._unmonitorAllIntersections(),this._unregisterInstance()},i.prototype.takeRecords=function(){var t=this._queuedEntries.slice();return this._queuedEntries=[],t},i.prototype._initThresholds=function(t){var e=t||[0];return Array.isArray(e)||(e=[e]),e.sort().filter(function(r,n,o){if(typeof r!="number"||isNaN(r)||r<0||r>1)throw new Error("threshold must be a number between 0 and 1 inclusively");return r!==o[n-1]})},i.prototype._parseRootMargin=function(t){var e=t||"0px",r=e.split(/\s+/).map(function(n){var o=/^(-?\d*\.?\d+)(px|%)$/.exec(n);if(!o)throw new Error("rootMargin must be specified in pixels or percent");return{value:parseFloat(o[1]),unit:o[2]}});return r[1]=r[1]||r[0],r[2]=r[2]||r[0],r[3]=r[3]||r[1],r},i.prototype._monitorIntersections=function(t){var e=t.defaultView;if(e&&this._monitoringDocuments.indexOf(t)==-1){var r=this._checkForIntersections,n=null,o=null;this.POLL_INTERVAL?n=e.setInterval(r,this.POLL_INTERVAL):(_(e,"resize",r,!0),_(t,"scroll",r,!0),this.USE_MUTATION_OBSERVER&&"MutationObserver"in e&&(o=new e.MutationObserver(r),o.observe(t,{attributes:!0,childList:!0,characterData:!0,subtree:!0}))),this._monitoringDocuments.push(t),this._monitoringUnsubscribes.push(function(){var u=t.defaultView;u&&(n&&u.clearInterval(n),T(u,"resize",r,!0)),T(t,"scroll",r,!0),o&&o.disconnect()});var a=this.root&&(this.root.ownerDocument||this.root)||g;if(t!=a){var s=l(t);s&&this._monitorIntersections(s.ownerDocument)}}},i.prototype._unmonitorIntersections=function(t){var e=this._monitoringDocuments.indexOf(t);if(e!=-1){var r=this.root&&(this.root.ownerDocument||this.root)||g,n=this._observationTargets.some(function(s){var u=s.element.ownerDocument;if(u==t)return!0;for(;u&&u!=r;){var f=l(u);if(u=f&&f.ownerDocument,u==t)return!0}return!1});if(!n){var o=this._monitoringUnsubscribes[e];if(this._monitoringDocuments.splice(e,1),this._monitoringUnsubscribes.splice(e,1),o(),t!=r){var a=l(t);a&&this._unmonitorIntersections(a.ownerDocument)}}}},i.prototype._unmonitorAllIntersections=function(){var t=this._monitoringUnsubscribes.slice(0);this._monitoringDocuments.length=0,this._monitoringUnsubscribes.length=0;for(var e=0;e<t.length;e++)t[e]()},i.prototype._checkForIntersections=function(){if(!(!this.root&&h&&!c)){var t=this._rootIsInDom(),e=t?this._getRootRect():v();this._observationTargets.forEach(function(r){var n=r.element,o=y(n),a=this._rootContainsTarget(n),s=r.entry,u=t&&a&&this._computeTargetAndRootIntersection(n,o,e),f=null;this._rootContainsTarget(n)?(!h||this.root)&&(f=e):f=v();var p=r.entry=new d({time:w(),target:n,boundingClientRect:o,rootBounds:f,intersectionRect:u});s?t&&a?this._hasCrossedThreshold(s,p)&&this._queuedEntries.push(p):s&&s.isIntersecting&&this._queuedEntries.push(p):this._queuedEntries.push(p)},this),this._queuedEntries.length&&this._callback(this.takeRecords(),this)}},i.prototype._computeTargetAndRootIntersection=function(t,e,r){if(window.getComputedStyle(t).display!="none"){for(var n=e,o=I(t),a=!1;!a&&o;){var s=null,u=o.nodeType==1?window.getComputedStyle(o):{};if(u.display=="none")return null;if(o==this.root||o.nodeType==9)if(a=!0,o==this.root||o==g)h&&!this.root?!c||c.width==0&&c.height==0?(o=null,s=null,n=null):s=c:s=r;else{var f=I(o),p=f&&y(f),x=f&&this._computeTargetAndRootIntersection(f,p,r);p&&x?(o=f,s=O(p,x)):(o=null,n=null)}else{var k=o.ownerDocument;o!=k.body&&o!=k.documentElement&&u.overflow!="visible"&&(s=y(o))}if(s&&(n=E(s,n)),!n)break;o=o&&I(o)}return n}},i.prototype._getRootRect=function(){var t;if(this.root&&!M(this.root))t=y(this.root);else{var e=M(this.root)?this.root:g,r=e.documentElement,n=e.body;t={top:0,left:0,right:r.clientWidth||n.clientWidth,width:r.clientWidth||n.clientWidth,bottom:r.clientHeight||n.clientHeight,height:r.clientHeight||n.clientHeight}}return this._expandRectByRootMargin(t)},i.prototype._expandRectByRootMargin=function(t){var e=this._rootMarginValues.map(function(n,o){return n.unit=="px"?n.value:n.value*(o%2?t.width:t.height)/100}),r={top:t.top-e[0],right:t.right+e[1],bottom:t.bottom+e[2],left:t.left-e[3]};return r.width=r.right-r.left,r.height=r.bottom-r.top,r},i.prototype._hasCrossedThreshold=function(t,e){var r=t&&t.isIntersecting?t.intersectionRatio||0:-1,n=e.isIntersecting?e.intersectionRatio||0:-1;if(r!==n)for(var o=0;o<this.thresholds.length;o++){var a=this.thresholds[o];if(a==r||a==n||a<r!=a<n)return!0}},i.prototype._rootIsInDom=function(){return!this.root||D(g,this.root)},i.prototype._rootContainsTarget=function(t){var e=this.root&&(this.root.ownerDocument||this.root)||g;return D(e,t)&&(!this.root||e==t.ownerDocument)},i.prototype._registerInstance=function(){m.indexOf(this)<0&&m.push(this)},i.prototype._unregisterInstance=function(){var t=m.indexOf(this);t!=-1&&m.splice(t,1)};function w(){return window.performance&&performance.now&&performance.now()}function b(t,e){var r=null;return function(){r||(r=setTimeout(function(){t(),r=null},e))}}function _(t,e,r,n){typeof t.addEventListener=="function"?t.addEventListener(e,r,n||!1):typeof t.attachEvent=="function"&&t.attachEvent("on"+e,r)}function T(t,e,r,n){typeof t.removeEventListener=="function"?t.removeEventListener(e,r,n||!1):typeof t.detachEvent=="function"&&t.detachEvent("on"+e,r)}function E(t,e){var r=Math.max(t.top,e.top),n=Math.min(t.bottom,e.bottom),o=Math.max(t.left,e.left),a=Math.min(t.right,e.right),s=a-o,u=n-r;return s>=0&&u>=0&&{top:r,bottom:n,left:o,right:a,width:s,height:u}||null}function y(t){var e;try{e=t.getBoundingClientRect()}catch{}return e?(e.width&&e.height||(e={top:e.top,right:e.right,bottom:e.bottom,left:e.left,width:e.right-e.left,height:e.bottom-e.top}),e):v()}function v(){return{top:0,bottom:0,left:0,right:0,width:0,height:0}}function R(t){return!t||"x"in t?t:{top:t.top,y:t.top,bottom:t.bottom,left:t.left,x:t.left,right:t.right,width:t.width,height:t.height}}function O(t,e){var r=e.top-t.top,n=e.left-t.left;return{top:r,left:n,height:e.height,width:e.width,bottom:r+e.height,right:n+e.width}}function D(t,e){for(var r=e;r;){if(r==t)return!0;r=I(r)}return!1}function I(t){var e=t.parentNode;return t.nodeType==9&&t!=g?l(t):(e&&e.assignedSlot&&(e=e.assignedSlot.parentNode),e&&e.nodeType==11&&e.host?e.host:e)}function M(t){return t&&t.nodeType===9}window.IntersectionObserver=i,window.IntersectionObserverEntry=d})();(()=>{const l=document.querySelector("[data-map]");if(!l)return;const g=async h=>{const[{Loader:c},{default:d}]=await Promise.all([await import("./index.esm.f71438e2.js"),await import("./mark.eb20d4d3.js")]);new c({apiKey:"",version:"weekly",language:"uk"}).load().then(()=>{const w=Number(h.dataset.lat),b=Number(h.dataset.lng),_=[{featureType:"water",elementType:"geometry",stylers:[{color:"#F7F7F7"},{lightness:17}]},{featureType:"road.highway",elementType:"geometry.fill",stylers:[{color:"#ffffff"},{lightness:17}]},{featureType:"road.highway",elementType:"geometry.stroke",stylers:[{color:"#ffffff"},{lightness:29},{weight:.2}]},{featureType:"road.arterial",elementType:"geometry",stylers:[{color:"#ffffff"},{lightness:18}]},{featureType:"road.local",elementType:"geometry",stylers:[{color:"#ffffff"},{lightness:16}]},{featureType:"poi.park",elementType:"geometry",stylers:[{color:"#F7F7F7"},{lightness:21}]},{elementType:"labels.text.stroke",stylers:[{visibility:"on"},{color:"#ffffff"},{lightness:16}]},{elementType:"labels.text.fill",stylers:[{saturation:36},{color:"#333333"},{lightness:40}]},{elementType:"labels.icon",stylers:[{visibility:"off"}]}],T={url:d,size:new google.maps.Size(44,44),scaledSize:new google.maps.Size(44,44)},E={lat:w,lng:b},y={lat:w-25e-5,lng:b},v=new google.maps.Map(h,{zoom:17,center:E,styles:_});new google.maps.Marker({position:y,map:v,icon:T})})};new IntersectionObserver((h,c)=>{h.forEach(function(d){d.isIntersecting&&l&&(c.unobserve(l),g(l))})},{rootMargin:"100px"}).observe(l)})();
